---

apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: vault
  namespace: vault
spec:
  interval: 5m
  chart:
    spec:
      # renovate: registryUrl=https://helm.releases.hashicorp.com
      chart: vault
      version: 0.9.1
      sourceRef:
        kind: HelmRepository
        name: hashicorp-charts
        namespace: flux-system
      interval: 5m
  values:
    injector:
      # True if you want to enable vault agent injection.
      enabled: false

    server:
      image:
        repository: "vault"
        tag: "1.6.3"

      updateStrategyType: "OnDelete"
      resources:
        requests:
          memory: 256Mi
          cpu: 250m
        limits:
          memory: 256Mi
          cpu: 250m

      ingress:
        enabled: true
        annotations:
          kubernetes.io/ingress.class: "internal"
        hosts:
          - host: vault.komhem.xyz
            paths: []
        tls:
          - hosts:
              - "vault.komhem.xyz"

      authDelegator:
        enabled: true

      readinessProbe:
        enabled: true
        # If you need to use a http path instead of the default exec
        # path: /v1/sys/health?standbyok=true

        # When a probe fails, Kubernetes will try failureThreshold times before giving up
        failureThreshold: 2
        # Number of seconds after the container has started before probe initiates
        initialDelaySeconds: 5
        # How often (in seconds) to perform the probe
        periodSeconds: 5
        # Minimum consecutive successes for the probe to be considered successful after having failed
        successThreshold: 1
        # Number of seconds after which the probe times out.
        timeoutSeconds: 3
      # Used to enable a livenessProbe for the pods
      livenessProbe:
        enabled: false
        path: "/v1/sys/health?standbyok=true"
        # When a probe fails, Kubernetes will try failureThreshold times before giving up
        failureThreshold: 2
        # Number of seconds after the container has started before probe initiates
        initialDelaySeconds: 60
        # How often (in seconds) to perform the probe
        periodSeconds: 5
        # Minimum consecutive successes for the probe to be considered successful after having failed
        successThreshold: 1
        # Number of seconds after which the probe times out.
        timeoutSeconds: 3

      # Affinity Settings
      # Commenting out or setting as empty the affinity variable, will allow
      # deployment to single node services such as Minikube
      affinity: |
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  app.kubernetes.io/name: {{ template "vault.name" . }}
                  app.kubernetes.io/instance: "{{ .Release.Name }}"
                  component: server
              topologyKey: kubernetes.io/hostname

      # Enables network policy for server pods
      networkPolicy:
        enabled: false

      # Enables a headless service to be used by the Vault Statefulset
      service:
        enabled: true
        # clusterIP controls whether a Cluster IP address is attached to the
        # Vault service within Kubernetes.  By default the Vault service will
        # be given a Cluster IP address, set to None to disable.  When disabled
        # Kubernetes will create a "headless" service.  Headless services can be
        # used to communicate with pods directly through DNS instead of a round robin
        # load balancer.
        # clusterIP: None

        # Configures the service type for the main Vault service.  Can be ClusterIP
        # or NodePort.
        # type: ClusterIP

        # If type is set to "NodePort", a specific nodePort value can be configured,
        # will be random if left blank.
        # nodePort: 30000

        # Port on which Vault server is listening
        port: 8200
        # Target port to which the service should be mapped to
        targetPort: 8200
        # Extra annotations for the service definition. This can either be YAML or a
        # YAML-formatted multi-line templated string map of the annotations to apply
        # to the service.
        annotations: {}

      # This configures the Vault Statefulset to create a PVC for data
      # storage when using the file or raft backend storage engines.
      # See https://www.vaultproject.io/docs/configuration/storage/index.html to know more
      dataStorage:
        enabled: false

      auditStorage:
        enabled: false

      standalone:
        enabled: false

      # Run Vault in "HA" mode. There are no storage requirements unless audit log
      # persistence is required.  In HA mode Vault will configure itself to use Consul
      # for its storage backend.  The default configuration provided will work the Consul
      # Helm project by default.  It is possible to manually configure Vault to use a
      # different HA backend.
      ha:
        enabled: true
        replicas: 2

        # Set the api_addr configuration for Vault HA
        # See https://www.vaultproject.io/docs/configuration#api_addr
        # If set to null, this will be set to the Pod IP Address
        apiAddr: null

        # config is a raw string of default configuration when using a Stateful
        # deployment. Default is to use a Consul for its HA storage backend.
        # This should be HCL.

        # Note: Configuration files are stored in ConfigMaps so sensitive data
        # such as passwords should be either mounted through extraSecretEnvironmentVars
        # or through a Kube secret.  For more information see:
        # https://www.vaultproject.io/docs/platform/k8s/helm/run#protecting-sensitive-vault-configurations
        config: |
          ui = true

          listener "tcp" {
            tls_disable = 1
            address = "[::]:8200"
            cluster_address = "[::]:8201"
          }
          storage "consul" {
            path = "vault"
            address = "HOST_IP:8500"
          }

          service_registration "kubernetes" {}

        # A disruption budget limits the number of pods of a replicated application
        # that are down simultaneously from voluntary disruptions
        disruptionBudget:
          enabled: true

          # maxUnavailable will default to (n/2)-1 where n is the number of
          # replicas. If you'd like a custom value, you can specify an override here.
          maxUnavailable: 1

      # Definition of the serviceAccount used to run Vault.
      # These options are also used when using an external Vault server to validate
      # Kubernetes tokens.
      serviceAccount:
        # Specifies whether a service account should be created
        create: true
        # The name of the service account to use.
        # If not set and create is true, a name is generated using the fullname template
        name: ""
        # Extra annotations for the serviceAccount definition. This can either be
        # YAML or a YAML-formatted multi-line templated string map of the
        # annotations to apply to the serviceAccount.
        annotations: {}

      # Settings for the statefulSet used to run Vault.
      statefulSet:
        # Extra annotations for the statefulSet. This can either be YAML or a
        # YAML-formatted multi-line templated string map of the annotations to apply
        # to the statefulSet.
        annotations: {}

    # Vault UI
    ui:
      enabled: true
      publishNotReadyAddresses: true
      # The service should only contain selectors for active Vault pod
      activeVaultPodOnly: false
      serviceType: "NodePort"
      serviceNodePort: null
      externalPort: 8200
